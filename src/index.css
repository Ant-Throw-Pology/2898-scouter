html, body {
    height: 100%;
    margin: 0;
}

body {
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    color: var(--color, #111);
    background-color: var(--bg, #eee);
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

a {
    text-decoration: none;
    cursor: pointer;
}

a:hover, a:focus {
    text-decoration: underline;
}

.hidden {
    display: none;
}

#header {
    padding: 0.6em;
    display: flex;
    flex-direction: row;
    gap: 0.75em;
}

#header > div:first-child {
    margin-right: auto;
    display: flex;
    gap: 0.75em;
    align-items: center;
}

#version {
    font-size: 0.75em;
    color: color-mix(in srgb, var(--color) 70%, var(--bg));
}

#header svg {
    width: 1em;
    height: 1em;
}

#help-button {
    cursor: pointer;
    border: none;
    margin: 0;
    padding: 0;
    font-size: 1em;
    border-radius: 50%;
    transition: transform 0.2s ease-out, background-color 0.15s ease;
    transform: rotate(360deg);
}

#help-button:hover {
    transform: rotate(361deg);
    transition: transform 0.5s cubic-bezier(0.25, 100, 0.5, -50), background-color 0.15s ease;
}

#help-dialog-c {
    background-color: rgba(0, 0, 0, 50%);
    position: fixed;
    inset: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 3;
}

.help-dialog {
    background-color: var(--bg);
    border: 1px solid #7f7f7f;
    border-radius: 20px;
    padding: 10px;
    width: min(80ch, calc(100% - 200px));
    height: calc(100% - 200px);
}

@media screen and ((max-width: 600px) or (max-height: 500px)) {
    .help-dialog {
        width: 100%;
        height: 100%;
        box-sizing: border-box;
        border: none;
        border-radius: 0;
        padding: 25px;
    }
}

.help-header {
    position: relative;
}

.help-header button {
    cursor: pointer;
    font-size: 0.5em;
    position: absolute;
    padding: 0.2em 0.3em;
    top: 0.2em;
}

.help-header button:nth-child(1) {
    left: 0;
}

.help-header button:nth-child(2) {
    right: 0;
}

.help-article {
    display: block;
    padding: 0.5em;
    border: 1px solid #7f7f7f;
    border-radius: 0.4em;
    text-decoration: none;
    color: inherit;
}

.help-article:hover, .help-article:focus {
    text-decoration: none;
    background-color: color-mix(in srgb, var(--color) 10%, var(--bg));
}

@media print {
    body {
        color: #000;
        background-color: #fff;
    }
    
    #header {
        display: none;
    }
}

#theme-toggle, #theme-reset {
    cursor: pointer;
    border: none;
    margin: 0;
    padding: 0;
    background-color: var(--bg);
    font-size: 1em;
    height: 1.2em;
    width: 1.2em;
    text-align: center;
}

#theme-toggle {
    z-index: 2;
}

#theme-reset {
    transform: translateX(2em) scale(0.5) rotate(45deg);
    will-change: transform;
    opacity: 0;
    pointer-events: none;
    z-index: 1;
    transition: transform 0.35s ease, opacity 0.35s ease;
}

#header:hover #theme-reset,
#theme-reset:focus,
#theme-reset:has(+ #theme-toggle:focus) {
    transform: none;
    opacity: 1;
    pointer-events: all;
    transition: transform 0.08s ease, opacity 0.08s ease;
}

#panels {
    flex-grow: 1;
    position: relative;
}

.panel {
    position: absolute;
    top: 0;
    left: 0;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 0.5em;
    overflow-y: scroll;
    padding-inline: 0.5em;
}

.panel hr {
    width: min(80dvw, 50ch);
}

p, h1, h2, h3 {
    text-wrap: balance;
    text-align: center;
}

.panel > p:first-child, h1:first-child, h2:first-child, h3:first-child {
    margin-block-start: 0;
}

img, svg {
    display: block;
    max-width: 100%;
}

input[name=onboarding-role] {
    width: 0;
    height: 0;
    position: absolute;
    opacity: 0;
    pointer-events: none;
}

input[name=onboarding-role] + label {
    width: 8ch;
    height: 2em;
    border-radius: 0.3em;
    border: 1px solid var(--color);
    display: inline-block;
    text-align: center;
    line-height: 2em;
    transition: background-color 0.2s ease, transform 0.2s ease;
    will-change: transform;
}

input[name=onboarding-role] + label:hover,
input[name=onboarding-role]:focus-visible + label {
    background-color: color-mix(in srgb, var(--bg) 90%, var(--color));
    transform: scale(1.05);
}

input[name=onboarding-role]:checked + label {
    background-color: color-mix(in srgb, var(--bg) 80%, var(--color));
}

input[type=button], button {
    border: 0.05em solid var(--color);
    border-radius: 0.3em;
    background-color: color-mix(in srgb, var(--color) 10%, var(--bg));
    color: inherit;
    font: inherit;
    padding: 0.3em 0.5em;
    cursor: pointer;
    transition: background-color 0.15s ease;
    user-select: none;
    -webkit-tap-highlight-color: transparent;
}

input[type=button]:hover, button:hover,
input[type=button]:focus-visible, button:focus-visible {
    background-color: color-mix(in srgb, var(--color) 20%, var(--bg));
}

input[type=button]:active, button:active {
    transition: background-color 0.03s ease;
    background-color: color-mix(in srgb, var(--color) 20%, var(--bg));
}

input[type=text], textarea, input[type*=time], input[type=number], select, .view-input {
    border: 0.05em solid var(--color);
    border-radius: 0.3em;
    background-color: color-mix(in srgb, var(--color) 10%, var(--bg));
    color: inherit;
    font: inherit;
    padding: 0.3em 0.5em;
    min-height: 1em;
    display: block;
}

select {
    padding-inline-end: 0.1em;
    padding-inline-start: 0.2em;
}

input[type=text]::placeholder, textarea::placeholder, input[type*=time]::placeholder {
    color: color-mix(in srgb, var(--color) 40%, var(--bg));
}

input[type=number] {
    width: 7ch;
}

input[type=checkbox] {
    border: 0.05em solid var(--color);
    border-radius: 0.2em;
    background-color: color-mix(in srgb, var(--color) 10%, var(--bg));
    appearance: none;
    width: 1em;
    height: 1em;
    display: inline;
    vertical-align: text-bottom;
}

input[type=checkbox]:checked::before {
    content: "âœ”";
    color: var(--color);
    transform: scale(0.85) translateY(-0.3em);
    display: inline-block;
    filter: grayscale(100%) brightness(var(--brightness-to-color));
}

input[type=radio] {
    border: 0.05em solid var(--color);
    border-radius: 50%;
    background-color: color-mix(in srgb, var(--color) 10%, var(--bg));
    appearance: none;
    width: 1em;
    height: 1em;
    display: inline-block;
    vertical-align: text-top;
}

input[type=radio]:checked::before {
    background-color: var(--color);
    content: "";
    width: 70%;
    height: 70%;
    display: block;
    border-radius: 50%;
    margin: 15%;
}

#panel-configuration {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: min-content auto min-content;
    padding: 0.5em 1.5em;
    gap: 0.75em;
}

#panel-configuration > div {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 0.5em;
}

#panel-configuration h1 {
    margin: 0;
}

@media screen and (max-width: 80ch) {
    #panel-configuration {
        grid-template-columns: 1fr;
        grid-template-rows: min-content auto auto min-content;
    }
}

#config-presets {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1em;
    align-self: center;
    position: relative;
    border-radius: 0.3em;
}

#config-presets:has(:focus-visible) {
    outline: 1px solid #fff;
    outline-offset: 2px;
}

#config-presets input {
    width: 0;
    height: 0;
    position: absolute;
    opacity: 0;
    pointer-events: none;
}

#config-presets label {
    width: min(20ch, 80dvw);
    height: 4em;
    border-radius: 0.3em;
    border: 1px solid var(--color);
    display: inline-block;
    text-align: center;
    align-content: center;
    transition: background-color 0.2s ease;
}

#config-presets input + label:hover,
#config-presets input:focus-visible + label {
    background-color: color-mix(in srgb, var(--bg) 90%, var(--color));
}

#config-presets input:checked + label {
    background-color: color-mix(in srgb, var(--bg) 80%, var(--color));
}

#config-teams-display {
    max-height: max(12em, 25svh);
    overflow-y: scroll;
    border: 1px solid var(--color);
    width: 100%;
    text-align: center;
}

#config-teams-display table {
    width: 100%;
}

#config-teams-display tr:nth-child(even) {
    background-color: color-mix(in srgb, var(--color) 5%, transparent);
}

#config-teams-display td {
    text-wrap: balance;
}

.create-targets-input {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: min(80dvw, 50ch);
}

.create-targets-input > span:nth-child(2) {
    color: color-mix(in srgb, var(--bg), var(--color) 70%);
    margin-left: auto;
}

.create-targets-input > div {
    border: 1px solid var(--color);
    width: 100%;
    min-height: 1.5em;
    padding: 0.25em;
    border-radius: 0.2em;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
    row-gap: 0.25em;
    cursor: text;
}

.create-targets-input > div > span.target {
    display: inline-flex;
    flex-direction: row;
    align-items: center;
    border: 1px solid var(--color);
    padding: 0.25em;
    border-radius: 0.2em;
    margin-inline-end: 0.5em;
    user-select: none;
}

.create-targets-input > div > span.target > button {
    border: none;
    border-radius: 0;
    margin: 0;
    padding: 0;
    background-color: transparent;
    font-size: 1em;
    margin-inline-start: 0.8em;
    width: 1em;
    height: 1em;
    display: inline-block;
    cursor: pointer;
    transition: transform 0.15s ease;
    will-change: transform;
}

.create-targets-input > div > span.target > button:hover {
    transform: scale(1.1);
}

.create-targets-input > div:has(span:not(.target):focus-visible) {
    outline: 1px solid var(--color);
    outline-offset: 2px;
}

/* make absolutely certain that this rule is only applied if the above is too */
.create-targets-input > div:has(span:not(.target):focus-visible) > span:not(.target):focus-visible {
    outline: none;
}

#panel-teams, #panel-team-entries {
    padding: 0.5em 0;
}

#teams-skip-list:not(:focus) {
    width: 0;
    height: 0;
    position: absolute;
    opacity: 0;
    pointer-events: none;
}

#teams-list {
    flex-grow: 1;
    overflow: scroll;
    width: min(80dvw, 80ch);
    display: grid;
    grid-template-columns: min-content minmax(max-content, auto) max-content minmax(max-content, auto) max-content;
    align-content: start;
}

#teams-list span, #entries-list span {
    padding: 0 0.4em;
    text-align: center;
    text-wrap: balance;
}

.teams-list-header {
    font-weight: bold;
    text-align: center;
    position: sticky;
    top: 0;
    background-color: var(--bg);
    box-shadow: 0 0.25em 0.5em 0 var(--bg);
    z-index: 4;
    margin-bottom: 0.5em;
}

#teams-list button, #entries-list button {
    padding: 0;
    width: 1em;
    height: 1em;
    z-index: 3;
    align-self: center;
}

#teams-list button svg, #entries-list button svg {
    width: 0.8em;
    height: 0.8em;
    display: block;
    margin: auto;
}

.teams-list-row-bg {
    transition: background-color 0.25s ease;
    z-index: 2;
}

.teams-list-row-bg:nth-child(odd of .teams-list-row-bg) {
    background-color: color-mix(in srgb, var(--color) 5%, transparent);
}

.teams-list-row-bg:hover, #teams-list button:hover + .teams-list-row-bg,
.teams-list-row-bg:focus {
    outline: none;
    background-color: color-mix(in srgb, var(--color) 30%, transparent) !important;
    transition: background-color 0.02s ease;
}

.teams-button-row {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.2em;
}

#teams-remove-data {
    border: 0.05em solid color-mix(in srgb, #f00, var(--bg) 30%);
    --gr-color-1: color-mix(in srgb, #f00, var(--bg) 60%);
    --gr-color-2: color-mix(in srgb, #f00, var(--bg) 80%);
    --gr-pc: 0%;
    background: linear-gradient(to right, var(--gr-color-1) 0% var(--gr-pc), var(--gr-color-2) var(--gr-pc) 100%);
}

#entries-list {
    flex-grow: 1;
    overflow-y: scroll;
    width: min(80dvw, 80ch);
    display: grid;
    grid-template-columns: min-content minmax(10ch, 1fr) 2fr 2fr max-content;
    align-content: start;
}

#entries-list.no-entries {
    grid-template-rows: auto;
    place-content: center;
}

#entries-list.no-entries p {
    font-style: italic;
    color: color-mix(in srgb, var(--bg), var(--color) 60%);
    grid-row: 1;
    grid-column: 1 / -1;
}

#view-stands-sec-driving p, #view-pits-sec-robot p {
    border: 0.05em solid var(--color);
    border-radius: 0.3em;
    background-color: color-mix(in srgb, var(--color) 10%, var(--bg));
    padding: 0.3em 0.5em;
    box-sizing: border-box;
    white-space: pre-wrap;
    width: 100%;
    min-height: 2em;
    margin: 0;
}

.view-checkbox::before {
    content: "â¬œ ";
}

.view-checkbox[data-checked=true]::before {
    content: "â˜‘ ";
}

.view-section p {
    margin: 0;
    margin-block-start: 0.2em;
}

.view-section p:first-child {
    margin-block-start: 0;
}

.view-input {
    min-width: 7ch;
    width: min-content;
}

#view-pits-will-change-at {
    min-width: 18ch;
    display: inline-block;
    height: 1em;
    vertical-align: middle;
}

#panel-scout-stands, #panel-scout-pits, #panel-view-stands, #panel-view-pits {
    display: grid;
    grid-template-columns: 30ch 30ch;
    padding: 0.8em 0;
    align-content: start;
    justify-items: center;
    overflow-y: scroll;
    overflow-x: hidden;
    align-items: start;
    grid-auto-rows: min-content;
    gap: 0;
}

@media (max-width: 80ch) {
    #panel-scout-stands, #panel-scout-pits {
        grid-template-columns: 30ch;
    }
    .scout-section {
        grid-area: auto !important; /* override inline styles set by DIY masonry; easier to do this than unset them in script */
    }
}

.scout-section, .view-section {
    padding: 1em;
    box-sizing: border-box;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: stretch;
    gap: 0.15em;
}

.scout-section h2, .view-section h2 {
    margin-block-start: 0;
    margin-block-end: 0.25em;
}

#scout-stands-team-info, #scout-pits-team-info,
#scout-stands-footer, #scout-pits-footer,
#view-stands-team-info, #view-pits-team-info,
#view-stands-footer, #view-pits-footer {
    grid-column: 1 / -1;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    text-align: center;
}

#scout-stands-team-number, #scout-pits-team-number {
    font-size: 1.2em;
}

#scout-stands-team-name, #scout-pits-team-name {
    font-size: 2em;
    padding-bottom: 1em;
    padding-left: 2em;
    padding-right: 2em;
    margin-bottom: -1em;
    border-bottom: 2px solid var(--color);
}

#scout-stands-team-location, #scout-pits-team-location {
    font-size: 0.75em;
}

#scout-stands-back, #scout-pits-back {
    margin-top: 1.5em;
}

.scout-row, .view-row {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
}

.scout-row input:not([type=number]) {
    flex-grow: 1;
}

.scout-checkboxes-row, .view-checkboxes-row {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: stretch;
    flex-wrap: wrap;
    gap: 0.1em;
}

.scout-checkboxes-row > div, .view-checkboxes-row > div {
    margin-inline: 0.4em;
}

#panel-scout-stands textarea, #panel-scout-pits textarea {
    width: 100%;
    resize: none;
    height: 4em;
}

#scout-pits-save, #view-pits-back-2 {
    margin-block-start: 0.5em;
}

.import-csv-bin {
    position: absolute;
    transition: top 0.2s ease-out, left 0.2s ease-out;
    width: 200px;
    height: 100px;
    pointer-events: none;
}

#import-qr-reader, #import-config-reader {
    width: 100%;
}

#import-qr-reader video, #import-config-reader video {
    width: 100% !important;
}

#panel-export-qr, #panel-export-configuration {
    padding: 0.5em 2em;
    text-align: center;
}

#export-qr-images, #export-config-images {
    flex-grow: 1;
    overflow: scroll;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: flex-start;
    justify-content: center;
    gap: 0.2em;
}

#export-qr-images img, #export-config-images img {
    image-rendering: pixelated;
    height: calc(100% - 1em);
    width: auto;
}

#export-config-images.unpixelated img {
    image-rendering: auto;
}

#panel-export-qr h3, #panel-export-qr p,
#panel-export-configuration h3, #panel-export-configuration p {
    margin: 0;
    max-width: 60ch;
}

@media print {
    #panel-export-qr > :not(#export-qr-images),
    #panel-export-configuration > :not(#export-config-images) {
        display: none;
    }
}